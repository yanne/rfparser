
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARGUMENT ASSIGNMENT CONTINUATION KEYWORD NAME SEPARATOR SETTING SETTING_VALUEtestcases : testcase\n                    | testcases testcasetestcase : NAME settings steps\n                    | NAME stepssettings : setting\n                    | settings settingsetting : SETTING setting_valuessetting_values : SETTING_VALUE\n                          | setting_values SETTING_VALUEsteps : step\n                 | steps stepstep : KEYWORD\n                | KEYWORD arguments\n                | ASSIGNMENT KEYWORD argumentsarguments : ARGUMENT\n                     | arguments ARGUMENT'
    
_lr_action_items = {'NAME':([0,1,2,4,6,8,10,12,14,17,18,21,22,],[3,3,-1,-2,-4,-10,-12,-3,-11,-13,-15,-16,-14,]),'$end':([1,2,4,6,8,10,12,14,17,18,21,22,],[0,-1,-2,-4,-10,-12,-3,-11,-13,-15,-16,-14,]),'SETTING':([3,5,7,13,15,16,20,],[9,9,-5,-6,-7,-8,-9,]),'KEYWORD':([3,5,6,7,8,10,11,12,13,14,15,16,17,18,20,21,22,],[10,10,10,-5,-10,-12,19,10,-6,-11,-7,-8,-13,-15,-9,-16,-14,]),'ASSIGNMENT':([3,5,6,7,8,10,12,13,14,15,16,17,18,20,21,22,],[11,11,11,-5,-10,-12,11,-6,-11,-7,-8,-13,-15,-9,-16,-14,]),'SETTING_VALUE':([9,15,16,20,],[16,20,-8,-9,]),'ARGUMENT':([10,17,18,19,21,22,],[18,21,-15,18,-16,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'testcases':([0,],[1,]),'testcase':([0,1,],[2,4,]),'settings':([3,],[5,]),'steps':([3,5,],[6,12,]),'setting':([3,5,],[7,13,]),'step':([3,5,6,12,],[8,8,14,14,]),'setting_values':([9,],[15,]),'arguments':([10,19,],[17,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> testcases","S'",1,None,None,None),
  ('testcases -> testcase','testcases',1,'p_testcases','tcukparser.py',46),
  ('testcases -> testcases testcase','testcases',2,'p_testcases','tcukparser.py',47),
  ('testcase -> NAME settings steps','testcase',3,'p_testcase','tcukparser.py',51),
  ('testcase -> NAME steps','testcase',2,'p_testcase','tcukparser.py',52),
  ('settings -> setting','settings',1,'p_settings','tcukparser.py',59),
  ('settings -> settings setting','settings',2,'p_settings','tcukparser.py',60),
  ('setting -> SETTING setting_values','setting',2,'p_setting','tcukparser.py',64),
  ('setting_values -> SETTING_VALUE','setting_values',1,'p_setting_values','tcukparser.py',68),
  ('setting_values -> setting_values SETTING_VALUE','setting_values',2,'p_setting_values','tcukparser.py',69),
  ('steps -> step','steps',1,'p_steps','tcukparser.py',73),
  ('steps -> steps step','steps',2,'p_steps','tcukparser.py',74),
  ('step -> KEYWORD','step',1,'p_step','tcukparser.py',78),
  ('step -> KEYWORD arguments','step',2,'p_step','tcukparser.py',79),
  ('step -> ASSIGNMENT KEYWORD arguments','step',3,'p_step','tcukparser.py',80),
  ('arguments -> ARGUMENT','arguments',1,'p_arguments','tcukparser.py',89),
  ('arguments -> arguments ARGUMENT','arguments',2,'p_arguments','tcukparser.py',90),
]
